package net.azagwen.atbyw.block.registry;

import com.google.common.collect.Sets;
import net.azagwen.atbyw.block.CarvedPumpkinBlockSubClass;
import net.azagwen.atbyw.block.ShatteredGlassBlock;
import net.azagwen.atbyw.block.SurfaceFacingBlock;
import net.azagwen.atbyw.block.slabs.*;
import net.azagwen.atbyw.block.stairs.*;
import net.azagwen.atbyw.util.AtbywUtils;
import net.azagwen.atbyw.util.naming.WoodNames;
import net.fabricmc.fabric.api.object.builder.v1.block.FabricBlockSettings;
import net.fabricmc.fabric.api.tool.attribute.v1.FabricToolTags;
import net.minecraft.block.*;
import net.minecraft.sound.BlockSoundGroup;

import java.util.Set;

import static net.azagwen.atbyw.main.AtbywMain.BLOCKS_TAB;
import static net.azagwen.atbyw.util.BlockUtils.registerBlock;
import static net.azagwen.atbyw.util.BlockUtils.registerBlocks;

public class BuildingBlockRegistry extends AtbywBlocks {
    public static final Block TICKING_DIRT = new Block(FabricBlockSettings.of(Material.SOIL, MapColor.DIRT_BROWN).ticksRandomly().breakByTool(FabricToolTags.SHOVELS).strength(0.5F).sounds(BlockSoundGroup.GRAVEL));
    public static final Block DUMMY_GRASS_BLOCK = new GrassBlock(FabricBlockSettings.of(Material.SOLID_ORGANIC).ticksRandomly().breakByTool(FabricToolTags.SHOVELS).strength(0.6F).sounds(BlockSoundGroup.GRASS));
    public static final Block DUMMY_MYCELIUM = new MyceliumBlock(FabricBlockSettings.of(Material.SOLID_ORGANIC, MapColor.PURPLE).ticksRandomly().breakByTool(FabricToolTags.SHOVELS).strength(0.6F).sounds(BlockSoundGroup.GRASS));

    public static final Set<Block> SHATTERED_GLASS_SET = Sets.newHashSet();
    public static final Block GRANITE_TILES = new Block(FabricBlockSettings.copyOf(Blocks.POLISHED_GRANITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block DIORITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.POLISHED_DIORITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ANDESITE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.POLISHED_ANDESITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRANITE_TILES_STAIRS = new StairsBlockSubClass(Blocks.POLISHED_GRANITE, FabricBlockSettings.copyOf(Blocks.POLISHED_GRANITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block DIORITE_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.POLISHED_DIORITE, FabricBlockSettings.copyOf(Blocks.POLISHED_DIORITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ANDESITE_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.POLISHED_ANDESITE, FabricBlockSettings.copyOf(Blocks.POLISHED_ANDESITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRANITE_TILES_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.POLISHED_GRANITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block DIORITE_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.POLISHED_DIORITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ANDESITE_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.POLISHED_ANDESITE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RAW_CACTUS_PLANKS = new Block(FabricBlockSettings.copyOf(Blocks.OAK_PLANKS).breakByTool(FabricToolTags.AXES));
    public static final Block CACTUS_PLANKS = new Block(FabricBlockSettings.copyOf(Blocks.OAK_PLANKS).breakByTool(FabricToolTags.AXES));
    public static final Block CACTUS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.OAK_SLAB).breakByTool(FabricToolTags.AXES));
    public static final Block CACTUS_STAIRS = new StairsBlockSubClass(CACTUS_PLANKS, FabricBlockSettings.copyOf(Blocks.OAK_STAIRS).breakByTool(FabricToolTags.AXES));
    public static final Block GRASS_BLOCK_STAIRS = new SpreadableStairsBlock(DUMMY_GRASS_BLOCK, Blocks.GRASS_BLOCK, FabricBlockSettings.copyOf(DUMMY_GRASS_BLOCK));
    public static final Block DIRT_STAIRS = new TickingDirtStairsBlock(TICKING_DIRT, FabricBlockSettings.copyOf(TICKING_DIRT));
    public static final Block COARSE_DIRT_STAIRS = new StairsBlockSubClass(Blocks.COARSE_DIRT, FabricBlockSettings.of(Material.SOIL, MapColor.DIRT_BROWN).breakByTool(FabricToolTags.SHOVELS).strength(0.5F).sounds(BlockSoundGroup.GRAVEL).ticksRandomly());
    public static final Block PODZOL_STAIRS = new StairsBlockSubClass(Blocks.PODZOL, FabricBlockSettings.of(Material.SOIL, MapColor.SPRUCE_BROWN).breakByTool(FabricToolTags.SHOVELS).strength(0.5F).sounds(BlockSoundGroup.GRAVEL));
    public static final Block ROOTED_DIRT_STAIRS = new StairsBlockSubClass(Blocks.ROOTED_DIRT, FabricBlockSettings.copyOf(Blocks.ROOTED_DIRT).breakByTool(FabricToolTags.SHOVELS));
    public static final Block MYCELIUM_STAIRS = new SpreadableStairsBlock(DUMMY_MYCELIUM, Blocks.MYCELIUM, FabricBlockSettings.copyOf(DUMMY_MYCELIUM));
    public static final Block GRASS_PATH_STAIRS = new GrassPathStairsBlock(Blocks.DIRT_PATH, FabricBlockSettings.copyOf(Blocks.DIRT_PATH).breakByTool(FabricToolTags.SHOVELS));
    public static final Block CRIMSON_NYLIUM_STAIRS = new NyliumStairsBlock(Blocks.CRIMSON_NYLIUM, FabricBlockSettings.copyOf(Blocks.CRIMSON_NYLIUM).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block WARPED_NYLIUM_STAIRS = new NyliumStairsBlock(Blocks.WARPED_NYLIUM, FabricBlockSettings.copyOf(Blocks.WARPED_NYLIUM).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block NETHERRACK_STAIRS = new NetherrackStairsBlock(Blocks.NETHERRACK, FabricBlockSettings.copyOf(Blocks.NETHERRACK).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRASS_BLOCK_SLAB = new SpreadableSlabBlock(Blocks.GRASS_BLOCK, FabricBlockSettings.copyOf(DUMMY_GRASS_BLOCK));
    public static final Block DIRT_SLAB = new TickingDirtSlabBlock(FabricBlockSettings.copyOf(TICKING_DIRT));
    public static final Block COARSE_DIRT_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.COARSE_DIRT).breakByTool(FabricToolTags.SHOVELS));
    public static final Block PODZOL_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PODZOL).breakByTool(FabricToolTags.SHOVELS));
    public static final Block ROOTED_DIRT_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.ROOTED_DIRT).breakByTool(FabricToolTags.SHOVELS));
    public static final Block MYCELIUM_SLAB = new SpreadableSlabBlock(Blocks.MYCELIUM, FabricBlockSettings.copyOf(DUMMY_MYCELIUM));
    public static final Block GRASS_PATH_SLAB = new GrassPathSlabBlock(FabricBlockSettings.copyOf(Blocks.DIRT_PATH).breakByTool(FabricToolTags.SHOVELS));
    public static final Block CRIMSON_NYLIUM_SLAB = new NyliumSlabBlock(FabricBlockSettings.copyOf(Blocks.CRIMSON_NYLIUM).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block WARPED_NYLIUM_SLAB = new NyliumSlabBlock(FabricBlockSettings.copyOf(Blocks.WARPED_NYLIUM).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block NETHERRACK_SLAB = new NetherrackSlabBlock(FabricBlockSettings.copyOf(Blocks.NETHERRACK).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block SAND_SLAB = new FallingSlabBlock(14406560, FabricBlockSettings.copyOf(Blocks.SAND).breakByTool(FabricToolTags.SHOVELS));
    public static final Block RED_SAND_SLAB = new FallingSlabBlock(11098145, FabricBlockSettings.copyOf(Blocks.RED_SAND).breakByTool(FabricToolTags.SHOVELS));
    public static final Block GRAVEL_SLAB = new FallingSlabBlock(-8356741, FabricBlockSettings.copyOf(Blocks.GRAVEL).breakByTool(FabricToolTags.SHOVELS));
    public static final Block SAND_STAIRS = new FallingStairsBlock(14406560, Blocks.SAND, SAND_SLAB, FabricBlockSettings.copyOf(Blocks.SAND).breakByTool(FabricToolTags.SHOVELS));
    public static final Block RED_SAND_STAIRS = new FallingStairsBlock(11098145, Blocks.RED_SAND, RED_SAND_SLAB, FabricBlockSettings.copyOf(Blocks.RED_SAND).breakByTool(FabricToolTags.SHOVELS));
    public static final Block GRAVEL_STAIRS = new FallingStairsBlock(-8356741, Blocks.GRAVEL, GRAVEL_SLAB, FabricBlockSettings.copyOf(Blocks.GRAVEL).breakByTool(FabricToolTags.SHOVELS));
    public static final Block OAK_LOG_STAIRS = new PillarStairsBlock(Blocks.OAK_LOG, logSettings(Blocks.OAK_LOG));
    public static final Block SPRUCE_LOG_STAIRS = new PillarStairsBlock(Blocks.SPRUCE_LOG, logSettings(Blocks.SPRUCE_LOG));
    public static final Block BIRCH_LOG_STAIRS = new PillarStairsBlock(Blocks.BIRCH_LOG, logSettings(Blocks.BIRCH_LOG));
    public static final Block JUNGLE_LOG_STAIRS = new PillarStairsBlock(Blocks.JUNGLE_LOG, logSettings(Blocks.JUNGLE_LOG));
    public static final Block ACACIA_LOG_STAIRS = new PillarStairsBlock(Blocks.ACACIA_LOG, logSettings(Blocks.ACACIA_LOG));
    public static final Block DARK_OAK_LOG_STAIRS = new PillarStairsBlock(Blocks.DARK_OAK_LOG, logSettings(Blocks.DARK_OAK_LOG));
    public static final Block CRIMSON_STEM_STAIRS = new PillarStairsBlock(Blocks.CRIMSON_STEM, logSettings(Blocks.CRIMSON_STEM));
    public static final Block WARPED_STEM_STAIRS = new PillarStairsBlock(Blocks.WARPED_STEM, logSettings(Blocks.WARPED_STEM));
    public static final Block STRIPPED_OAK_LOG_STAIRS = new PillarStairsBlock(Blocks.STRIPPED_OAK_LOG, logSettings(Blocks.STRIPPED_OAK_LOG));
    public static final Block STRIPPED_SPRUCE_LOG_STAIRS = new PillarStairsBlock(Blocks.STRIPPED_SPRUCE_LOG, logSettings(Blocks.STRIPPED_SPRUCE_LOG));
    public static final Block STRIPPED_BIRCH_LOG_STAIRS = new PillarStairsBlock(Blocks.STRIPPED_BIRCH_LOG, logSettings(Blocks.STRIPPED_BIRCH_LOG));
    public static final Block STRIPPED_JUNGLE_LOG_STAIRS = new PillarStairsBlock(Blocks.STRIPPED_JUNGLE_LOG, logSettings(Blocks.STRIPPED_JUNGLE_LOG));
    public static final Block STRIPPED_ACACIA_LOG_STAIRS = new PillarStairsBlock(Blocks.STRIPPED_ACACIA_LOG, logSettings(Blocks.STRIPPED_ACACIA_LOG));
    public static final Block STRIPPED_DARK_OAK_LOG_STAIRS = new PillarStairsBlock(Blocks.STRIPPED_DARK_OAK_LOG, logSettings(Blocks.STRIPPED_DARK_OAK_LOG));
    public static final Block STRIPPED_CRIMSON_STEM_STAIRS = new PillarStairsBlock(Blocks.STRIPPED_CRIMSON_STEM, logSettings(Blocks.STRIPPED_CRIMSON_STEM));
    public static final Block STRIPPED_WARPED_STEM_STAIRS = new PillarStairsBlock(Blocks.STRIPPED_WARPED_STEM, logSettings(Blocks.STRIPPED_WARPED_STEM));
    public static final Block OAK_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.OAK_LOG));
    public static final Block SPRUCE_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.SPRUCE_LOG));
    public static final Block BIRCH_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.BIRCH_LOG));
    public static final Block JUNGLE_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.JUNGLE_LOG));
    public static final Block ACACIA_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.ACACIA_LOG));
    public static final Block DARK_OAK_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.DARK_OAK_LOG));
    public static final Block CRIMSON_STEM_SLAB = new PillarSlabBlock(logSettings(Blocks.CRIMSON_STEM));
    public static final Block WARPED_STEM_SLAB = new PillarSlabBlock(logSettings(Blocks.WARPED_STEM));
    public static final Block STRIPPED_OAK_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.STRIPPED_OAK_LOG));
    public static final Block STRIPPED_SPRUCE_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.STRIPPED_SPRUCE_LOG));
    public static final Block STRIPPED_BIRCH_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.STRIPPED_BIRCH_LOG));
    public static final Block STRIPPED_JUNGLE_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.STRIPPED_JUNGLE_LOG));
    public static final Block STRIPPED_ACACIA_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.STRIPPED_ACACIA_LOG));
    public static final Block STRIPPED_DARK_OAK_LOG_SLAB = new PillarSlabBlock(logSettings(Blocks.STRIPPED_DARK_OAK_LOG));
    public static final Block STRIPPED_CRIMSON_STEM_SLAB = new PillarSlabBlock(logSettings(Blocks.STRIPPED_CRIMSON_STEM));
    public static final Block STRIPPED_WARPED_STEM_SLAB = new PillarSlabBlock(logSettings(Blocks.STRIPPED_WARPED_STEM));
    public static final Block SHATTERED_GLASS = createShatteredGlass(Blocks.GLASS);
    public static final Block SOUL_JACK_O_LANTERN = new CarvedPumpkinBlockSubClass(FabricBlockSettings.of(Material.GOURD, MapColor.ORANGE).strength(1.0F).sounds(BlockSoundGroup.WOOD).luminance((state) -> 10).allowsSpawning(AtbywBlocks::always));
    public static final Block SPRUCE_BOOKSHELF = new Block(FabricBlockSettings.copyOf(Blocks.BOOKSHELF));
    public static final Block BIRCH_BOOKSHELF = new Block(FabricBlockSettings.copyOf(Blocks.BOOKSHELF));
    public static final Block JUNGLE_BOOKSHELF = new Block(FabricBlockSettings.copyOf(Blocks.BOOKSHELF));
    public static final Block ACACIA_BOOKSHELF = new Block(FabricBlockSettings.copyOf(Blocks.BOOKSHELF));
    public static final Block DARK_OAK_BOOKSHELF = new Block(FabricBlockSettings.copyOf(Blocks.BOOKSHELF));
    public static final Block CRIMSON_BOOKSHELF = new Block(FabricBlockSettings.copyOf(Blocks.BOOKSHELF));
    public static final Block WARPED_BOOKSHELF = new Block(FabricBlockSettings.copyOf(Blocks.BOOKSHELF));
    public static final Block PURPUR_TILES = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CHISELED_PURPUR_BLOCK = new SurfaceFacingBlock(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CUT_PURPUR_BLOCK = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block SMOOTH_PURPUR_BLOCK = new Block(FabricBlockSettings.copyOf(Blocks.PURPUR_BLOCK).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPUR_TILES_STAIRS = new StairsBlockSubClass(PURPUR_TILES, FabricBlockSettings.copyOf(Blocks.PURPUR_STAIRS).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CUT_PURPUR_STAIRS = new StairsBlockSubClass(CUT_PURPUR_BLOCK, FabricBlockSettings.copyOf(Blocks.PURPUR_STAIRS).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block SMOOTH_PURPUR_STAIRS = new StairsBlockSubClass(CUT_PURPUR_BLOCK, FabricBlockSettings.copyOf(Blocks.PURPUR_STAIRS).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPUR_TILES_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PURPUR_SLAB).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CUT_PURPUR_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PURPUR_SLAB).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block SMOOTH_PURPUR_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PURPUR_SLAB).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block COMPACTED_SNOW_BLOCK = new Block(FabricBlockSettings.of(Material.SNOW_BLOCK).strength(0.4F).requiresTool().breakByTool(FabricToolTags.SHOVELS).sounds(BlockSoundGroup.SNOW));
    public static final Block COMPACTED_SNOW_BRICKS = new Block(FabricBlockSettings.copyOf(COMPACTED_SNOW_BLOCK));
    public static final Block CHISELED_COMPACTED_SNOW_BRICKS = new Block(FabricBlockSettings.copyOf(COMPACTED_SNOW_BLOCK));
    public static final Block PACKED_ICE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PACKED_ICE));
    public static final Block CHISELED_PACKED_ICE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PACKED_ICE));
    public static final Block BLUE_ICE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BLUE_ICE));
    public static final Block CHISELED_BLUE_ICE_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BLUE_ICE));
    public static final Block COMPACTED_SNOW_BLOCK_STAIRS = new StairsBlockSubClass(COMPACTED_SNOW_BLOCK, FabricBlockSettings.copyOf(COMPACTED_SNOW_BLOCK));
    public static final Block COMPACTED_SNOW_BRICKS_STAIRS = new StairsBlockSubClass(COMPACTED_SNOW_BRICKS, FabricBlockSettings.copyOf(COMPACTED_SNOW_BLOCK));
    public static final Block PACKED_ICE_STAIRS = new StairsBlockSubClass(Blocks.PACKED_ICE, FabricBlockSettings.copyOf(Blocks.PACKED_ICE));
    public static final Block BLUE_ICE_STAIRS = new StairsBlockSubClass(Blocks.BLUE_ICE, FabricBlockSettings.copyOf(Blocks.BLUE_ICE));
    public static final Block PACKED_ICE_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.PACKED_ICE, FabricBlockSettings.copyOf(Blocks.PACKED_ICE));
    public static final Block BLUE_ICE_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.BLUE_ICE, FabricBlockSettings.copyOf(Blocks.BLUE_ICE));
    public static final Block COMPACTED_SNOW_BLOCK_SLAB = new SlabBlock(FabricBlockSettings.copyOf(COMPACTED_SNOW_BLOCK));
    public static final Block COMPACTED_SNOW_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(COMPACTED_SNOW_BLOCK));
    public static final Block PACKED_ICE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PACKED_ICE));
    public static final Block BLUE_ICE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BLUE_ICE));
    public static final Block PACKED_ICE_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PACKED_ICE));
    public static final Block BLUE_ICE_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BLUE_ICE));
    public static final Block WHITE_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.WHITE_STAINED_GLASS);
    public static final Block ORANGE_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.ORANGE_STAINED_GLASS);
    public static final Block MAGENTA_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.MAGENTA_STAINED_GLASS);
    public static final Block LIGHT_BLUE_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.LIGHT_BLUE_STAINED_GLASS);
    public static final Block YELLOW_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.YELLOW_STAINED_GLASS);
    public static final Block LIME_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.LIME_STAINED_GLASS);
    public static final Block PINK_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.PINK_STAINED_GLASS);
    public static final Block GRAY_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.GRAY_STAINED_GLASS);
    public static final Block LIGHT_GRAY_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.LIGHT_GRAY_STAINED_GLASS);
    public static final Block CYAN_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.CYAN_STAINED_GLASS);
    public static final Block PURPLE_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.PURPLE_STAINED_GLASS);
    public static final Block BLUE_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.BLUE_STAINED_GLASS);
    public static final Block BROWN_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.BROWN_STAINED_GLASS);
    public static final Block GREEN_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.GREEN_STAINED_GLASS);
    public static final Block RED_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.RED_STAINED_GLASS);
    public static final Block BLACK_STAINED_SHATTERED_GLASS = createShatteredGlass(Blocks.BLACK_STAINED_GLASS);
    public static final Block BASALT_BRICKS = new Block(basaltSettings());
    public static final Block BASALT_PILLAR = new PillarBlock(basaltSettings());
    public static final Block TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.TERRACOTTA, FabricBlockSettings.copy(Blocks.TERRACOTTA));
    public static final Block WHITE_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.WHITE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.WHITE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ORANGE_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.ORANGE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.ORANGE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block MAGENTA_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.MAGENTA_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.MAGENTA_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_BLUE_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.LIGHT_BLUE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block YELLOW_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.YELLOW_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.YELLOW_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIME_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.LIME_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.LIME_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PINK_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.PINK_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.PINK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRAY_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.GRAY_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_GRAY_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.LIGHT_GRAY_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CYAN_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.CYAN_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.CYAN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPLE_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.PURPLE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.PURPLE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLUE_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.BLUE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BROWN_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.BROWN_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.BROWN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GREEN_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.GREEN_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.GREEN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RED_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.RED_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.RED_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLACK_TERRACOTTA_STAIRS = new StairsBlockSubClass(Blocks.BLACK_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.BLACK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block WHITE_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.WHITE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ORANGE_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.ORANGE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block MAGENTA_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.MAGENTA_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_BLUE_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block YELLOW_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.YELLOW_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIME_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIME_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PINK_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PINK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRAY_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_GRAY_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CYAN_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.CYAN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPLE_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PURPLE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLUE_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BROWN_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BROWN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GREEN_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.GREEN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RED_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.RED_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLACK_TERRACOTTA_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BLACK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block WHITE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.WHITE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ORANGE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.ORANGE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block MAGENTA_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.MAGENTA_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_BLUE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block YELLOW_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.YELLOW_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIME_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIME_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PINK_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PINK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRAY_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_GRAY_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CYAN_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.CYAN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPLE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.PURPLE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLUE_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BROWN_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BROWN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GREEN_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.GREEN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RED_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.RED_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLACK_TERRACOTTA_BRICKS = new Block(FabricBlockSettings.copyOf(Blocks.BLACK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.TERRACOTTA, FabricBlockSettings.copy(Blocks.TERRACOTTA));
    public static final Block WHITE_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.WHITE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.WHITE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ORANGE_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.ORANGE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.ORANGE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block MAGENTA_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.MAGENTA_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.MAGENTA_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_BLUE_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.LIGHT_BLUE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block YELLOW_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.YELLOW_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.YELLOW_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIME_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.LIME_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.LIME_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PINK_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.PINK_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.PINK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRAY_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.GRAY_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_GRAY_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.LIGHT_GRAY_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CYAN_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.CYAN_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.CYAN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPLE_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.PURPLE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.PURPLE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLUE_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.BLUE_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BROWN_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.BROWN_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.BROWN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GREEN_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.GREEN_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.GREEN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RED_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.RED_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.RED_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLACK_TERRACOTTA_BRICKS_STAIRS = new StairsBlockSubClass(Blocks.BLACK_TERRACOTTA, FabricBlockSettings.copyOf(Blocks.BLACK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block WHITE_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.WHITE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ORANGE_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.ORANGE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block MAGENTA_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.MAGENTA_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_BLUE_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block YELLOW_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.YELLOW_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIME_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIME_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PINK_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PINK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRAY_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_GRAY_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CYAN_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.CYAN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPLE_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PURPLE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLUE_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BROWN_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BROWN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GREEN_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.GREEN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RED_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.RED_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLACK_TERRACOTTA_BRICKS_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BLACK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block WHITE_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.WHITE_CONCRETE, FabricBlockSettings.copyOf(Blocks.WHITE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ORANGE_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.ORANGE_CONCRETE, FabricBlockSettings.copyOf(Blocks.ORANGE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block MAGENTA_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.MAGENTA_CONCRETE, FabricBlockSettings.copyOf(Blocks.MAGENTA_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_BLUE_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.LIGHT_BLUE_CONCRETE, FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block YELLOW_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.YELLOW_CONCRETE, FabricBlockSettings.copyOf(Blocks.YELLOW_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIME_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.LIME_CONCRETE, FabricBlockSettings.copyOf(Blocks.LIME_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PINK_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.PINK_CONCRETE, FabricBlockSettings.copyOf(Blocks.PINK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRAY_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.GRAY_CONCRETE, FabricBlockSettings.copyOf(Blocks.GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_GRAY_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.LIGHT_GRAY_CONCRETE, FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CYAN_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.CYAN_CONCRETE, FabricBlockSettings.copyOf(Blocks.CYAN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPLE_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.PURPLE_CONCRETE, FabricBlockSettings.copyOf(Blocks.PURPLE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLUE_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.BLUE_CONCRETE, FabricBlockSettings.copyOf(Blocks.BLUE_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BROWN_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.BROWN_CONCRETE, FabricBlockSettings.copyOf(Blocks.BROWN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GREEN_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.GREEN_CONCRETE, FabricBlockSettings.copyOf(Blocks.GREEN_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RED_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.RED_CONCRETE, FabricBlockSettings.copyOf(Blocks.RED_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLACK_CONCRETE_STAIRS = new StairsBlockSubClass(Blocks.BLACK_CONCRETE, FabricBlockSettings.copyOf(Blocks.BLACK_TERRACOTTA).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block WHITE_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.WHITE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ORANGE_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.ORANGE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block MAGENTA_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.MAGENTA_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_BLUE_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block YELLOW_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.YELLOW_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIME_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIME_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PINK_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PINK_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRAY_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.GRAY_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_GRAY_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CYAN_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.CYAN_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPLE_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.PURPLE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLUE_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BLUE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BROWN_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BROWN_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GREEN_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.GREEN_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RED_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.RED_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLACK_CONCRETE_SLAB = new SlabBlock(FabricBlockSettings.copyOf(Blocks.BLACK_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block WHITE_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.WHITE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block ORANGE_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.ORANGE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block MAGENTA_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.MAGENTA_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_BLUE_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.LIGHT_BLUE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block YELLOW_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.YELLOW_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIME_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.LIME_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PINK_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.PINK_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GRAY_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.GRAY_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block LIGHT_GRAY_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.LIGHT_GRAY_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block CYAN_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.CYAN_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block PURPLE_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.PURPLE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLUE_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.BLUE_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BROWN_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.BROWN_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block GREEN_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.GREEN_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block RED_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.RED_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));
    public static final Block BLACK_CINDER_BLOCKS = new PillarBlock(FabricBlockSettings.copyOf(Blocks.BLACK_CONCRETE).requiresTool().breakByTool(FabricToolTags.PICKAXES));

    private static FabricBlockSettings basaltSettings() {
        return FabricBlockSettings.of(Material.STONE, MapColor.BLACK).requiresTool().breakByTool(FabricToolTags.PICKAXES).strength(1.25F, 4.2F).sounds(BlockSoundGroup.BASALT);
    }

    private static FabricBlockSettings logSettings(Block copiedBlock) {
        return FabricBlockSettings.of(Material.WOOD, copiedBlock.getDefaultMapColor()).strength(2.0F).breakByTool(FabricToolTags.AXES).sounds(copiedBlock.getSoundGroup(copiedBlock.getDefaultState()));
    }

    private static ShatteredGlassBlock createShatteredGlass(Block copiedBlock) {
        var settings = FabricBlockSettings.of(Material.GLASS).strength(0.3F).sounds(BlockSoundGroup.GLASS).nonOpaque().allowsSpawning(AtbywBlocks::never).solidBlock(AtbywBlocks::never).suffocates(AtbywBlocks::never).blockVision(AtbywBlocks::never);

        if (copiedBlock instanceof StainedGlassBlock stainedGlass) {
            return new ShatteredGlassBlock(SHATTERED_GLASS_SET, stainedGlass.getColor(), stainedGlass, settings);
        } else {
            return new ShatteredGlassBlock(SHATTERED_GLASS_SET, copiedBlock, settings);
        }
    }

    public static void init() {
        registerBlock(false, BLOCKS_TAB, "granite_tiles", GRANITE_TILES);
        registerBlock(false, BLOCKS_TAB, "diorite_bricks", DIORITE_BRICKS);
        registerBlock(false, BLOCKS_TAB, "andesite_bricks", ANDESITE_BRICKS);
        registerBlock(false, BLOCKS_TAB, "granite_tiles_stairs", GRANITE_TILES_STAIRS);
        registerBlock(false, BLOCKS_TAB, "diorite_bricks_stairs", DIORITE_BRICKS_STAIRS);
        registerBlock(false, BLOCKS_TAB, "andesite_bricks_stairs", ANDESITE_BRICKS_STAIRS);
        registerBlock(false, BLOCKS_TAB, "granite_tiles_slab", GRANITE_TILES_SLAB);
        registerBlock(false, BLOCKS_TAB, "diorite_bricks_slab", DIORITE_BRICKS_SLAB);
        registerBlock(false, BLOCKS_TAB, "andesite_bricks_slab", ANDESITE_BRICKS_SLAB);
        registerBlock(false, BLOCKS_TAB, "raw_cactus_planks", RAW_CACTUS_PLANKS);
        registerBlock(false, BLOCKS_TAB, "cactus_planks", CACTUS_PLANKS);
        registerBlock(false, BLOCKS_TAB, "cactus_slab", CACTUS_SLAB);
        registerBlock(false, BLOCKS_TAB, "cactus_stairs", CACTUS_STAIRS);
        registerBlock(false, BLOCKS_TAB, "grass_block_stairs", GRASS_BLOCK_STAIRS);
        registerBlock(false, BLOCKS_TAB, "dirt_stairs", DIRT_STAIRS);
        registerBlock(false, BLOCKS_TAB, "coarse_dirt_stairs", COARSE_DIRT_STAIRS);
        registerBlock(false, BLOCKS_TAB, "podzol_stairs", PODZOL_STAIRS);
        registerBlock(false, BLOCKS_TAB, "rooted_dirt_stairs", ROOTED_DIRT_STAIRS);
        registerBlock(false, BLOCKS_TAB, "mycelium_stairs", MYCELIUM_STAIRS);
        registerBlock(false, BLOCKS_TAB, "grass_path_stairs", GRASS_PATH_STAIRS);
        registerBlock(false, BLOCKS_TAB, "crimson_nylium_stairs", CRIMSON_NYLIUM_STAIRS);
        registerBlock(false, BLOCKS_TAB, "warped_nylium_stairs", WARPED_NYLIUM_STAIRS);
        registerBlock(false, BLOCKS_TAB, "netherrack_stairs", NETHERRACK_STAIRS);
        registerBlock(false, BLOCKS_TAB, "sand_stairs", SAND_STAIRS);
        registerBlock(false, BLOCKS_TAB, "red_sand_stairs", RED_SAND_STAIRS);
        registerBlock(false, BLOCKS_TAB, "gravel_stairs", GRAVEL_STAIRS);
        registerBlock(false, BLOCKS_TAB, "grass_block_slab", GRASS_BLOCK_SLAB);
        registerBlock(false, BLOCKS_TAB, "dirt_slab", DIRT_SLAB);
        registerBlock(false, BLOCKS_TAB, "coarse_dirt_slab", COARSE_DIRT_SLAB);
        registerBlock(false, BLOCKS_TAB, "podzol_slab", PODZOL_SLAB);
        registerBlock(false, BLOCKS_TAB, "rooted_dirt_slab", ROOTED_DIRT_SLAB);
        registerBlock(false, BLOCKS_TAB, "mycelium_slab", MYCELIUM_SLAB);
        registerBlock(false, BLOCKS_TAB, "grass_path_slab", GRASS_PATH_SLAB);
        registerBlock(false, BLOCKS_TAB, "crimson_nylium_slab", CRIMSON_NYLIUM_SLAB);
        registerBlock(false, BLOCKS_TAB, "warped_nylium_slab", WARPED_NYLIUM_SLAB);
        registerBlock(false, BLOCKS_TAB, "netherrack_slab", NETHERRACK_SLAB);
        registerBlock(false, BLOCKS_TAB, "sand_slab", SAND_SLAB);
        registerBlock(false, BLOCKS_TAB, "red_sand_slab", RED_SAND_SLAB);
        registerBlock(false, BLOCKS_TAB, "gravel_slab", GRAVEL_SLAB);
        registerBlocks(false, BLOCKS_TAB, "log_stairs", WoodNames.getNamesOverworld(), OAK_LOG_STAIRS, SPRUCE_LOG_STAIRS, BIRCH_LOG_STAIRS, JUNGLE_LOG_STAIRS, ACACIA_LOG_STAIRS, DARK_OAK_LOG_STAIRS);
        registerBlocks(false, BLOCKS_TAB, "stem_stairs", WoodNames.getNamesNether(), CRIMSON_STEM_STAIRS, WARPED_STEM_STAIRS);
        registerBlocks(false, BLOCKS_TAB, "stripped", "log_stairs", WoodNames.getNamesOverworld(), STRIPPED_OAK_LOG_STAIRS, STRIPPED_SPRUCE_LOG_STAIRS, STRIPPED_BIRCH_LOG_STAIRS, STRIPPED_JUNGLE_LOG_STAIRS, STRIPPED_ACACIA_LOG_STAIRS, STRIPPED_DARK_OAK_LOG_STAIRS);
        registerBlocks(false, BLOCKS_TAB, "stripped", "stem_stairs", WoodNames.getNamesNether(), STRIPPED_CRIMSON_STEM_STAIRS, STRIPPED_WARPED_STEM_STAIRS);
        registerBlocks(false, BLOCKS_TAB, "log_slab", WoodNames.getNamesOverworld(), OAK_LOG_SLAB, SPRUCE_LOG_SLAB, BIRCH_LOG_SLAB, JUNGLE_LOG_SLAB, ACACIA_LOG_SLAB, DARK_OAK_LOG_SLAB);
        registerBlocks(false, BLOCKS_TAB, "stem_slab", WoodNames.getNamesNether(), CRIMSON_STEM_SLAB, WARPED_STEM_SLAB);
        registerBlocks(false, BLOCKS_TAB, "stripped", "log_slab", WoodNames.getNamesOverworld(), STRIPPED_OAK_LOG_SLAB, STRIPPED_SPRUCE_LOG_SLAB, STRIPPED_BIRCH_LOG_SLAB, STRIPPED_JUNGLE_LOG_SLAB, STRIPPED_ACACIA_LOG_SLAB, STRIPPED_DARK_OAK_LOG_SLAB);
        registerBlocks(false, BLOCKS_TAB, "stripped", "stem_slab", WoodNames.getNamesNether(), STRIPPED_CRIMSON_STEM_SLAB, STRIPPED_WARPED_STEM_SLAB);
        registerBlock(false, BLOCKS_TAB, "shattered_glass", SHATTERED_GLASS);
        registerBlock(false, BLOCKS_TAB, "soul_jack_o_lantern", SOUL_JACK_O_LANTERN);
        registerBlocks(false, BLOCKS_TAB, "bookshelf", WoodNames.getNamesNoOak(), SPRUCE_BOOKSHELF, BIRCH_BOOKSHELF, JUNGLE_BOOKSHELF, ACACIA_BOOKSHELF, DARK_OAK_BOOKSHELF, CRIMSON_BOOKSHELF, WARPED_BOOKSHELF);
        registerBlock(false, BLOCKS_TAB, "purpur_tiles", PURPUR_TILES);
        registerBlock(false, BLOCKS_TAB, "chiseled_purpur_block", CHISELED_PURPUR_BLOCK);
        registerBlock(false, BLOCKS_TAB, "cut_purpur_block", CUT_PURPUR_BLOCK);
        registerBlock(false, BLOCKS_TAB, "smooth_purpur_block", SMOOTH_PURPUR_BLOCK);
        registerBlock(false, BLOCKS_TAB, "purpur_tiles_stairs", PURPUR_TILES_STAIRS);
        registerBlock(false, BLOCKS_TAB, "cut_purpur_stairs", CUT_PURPUR_STAIRS);
        registerBlock(false, BLOCKS_TAB, "smooth_purpur_stairs", SMOOTH_PURPUR_STAIRS);
        registerBlock(false, BLOCKS_TAB, "purpur_tiles_slab", PURPUR_TILES_SLAB);
        registerBlock(false, BLOCKS_TAB, "cut_purpur_slab", CUT_PURPUR_SLAB);
        registerBlock(false, BLOCKS_TAB, "smooth_purpur_slab", SMOOTH_PURPUR_SLAB);
        registerBlock(false, BLOCKS_TAB, "compacted_snow_block", COMPACTED_SNOW_BLOCK);
        registerBlock(false, BLOCKS_TAB, "compacted_snow_bricks", COMPACTED_SNOW_BRICKS);
        registerBlock(false, BLOCKS_TAB, "chiseled_compacted_snow_bricks", CHISELED_COMPACTED_SNOW_BRICKS);
        registerBlock(false, BLOCKS_TAB, "packed_ice_bricks", PACKED_ICE_BRICKS);
        registerBlock(false, BLOCKS_TAB, "chiseled_packed_ice_bricks", CHISELED_PACKED_ICE_BRICKS);
        registerBlock(false, BLOCKS_TAB, "blue_ice_bricks", BLUE_ICE_BRICKS);
        registerBlock(false, BLOCKS_TAB, "chiseled_blue_ice_bricks", CHISELED_BLUE_ICE_BRICKS);
        registerBlock(false, BLOCKS_TAB, "compacted_snow_block_stairs", COMPACTED_SNOW_BLOCK_STAIRS);
        registerBlock(false, BLOCKS_TAB, "compacted_snow_bricks_stairs", COMPACTED_SNOW_BRICKS_STAIRS);
        registerBlock(false, BLOCKS_TAB, "packed_ice_stairs", PACKED_ICE_STAIRS);
        registerBlock(false, BLOCKS_TAB, "blue_ice_stairs", BLUE_ICE_STAIRS);
        registerBlock(false, BLOCKS_TAB, "packed_ice_bricks_stairs", PACKED_ICE_BRICKS_STAIRS);
        registerBlock(false, BLOCKS_TAB, "blue_ice_bricks_stairs", BLUE_ICE_BRICKS_STAIRS);
        registerBlock(false, BLOCKS_TAB, "compacted_snow_block_slab", COMPACTED_SNOW_BLOCK_SLAB);
        registerBlock(false, BLOCKS_TAB, "compacted_snow_bricks_slab", COMPACTED_SNOW_BRICKS_SLAB);
        registerBlock(false, BLOCKS_TAB, "packed_ice_slab", PACKED_ICE_SLAB);
        registerBlock(false, BLOCKS_TAB, "blue_ice_slab", BLUE_ICE_SLAB);
        registerBlock(false, BLOCKS_TAB, "packed_ice_bricks_slab", PACKED_ICE_BRICKS_SLAB);
        registerBlock(false, BLOCKS_TAB, "blue_ice_bricks_slab", BLUE_ICE_BRICKS_SLAB);
        registerBlocks(false, BLOCKS_TAB, "stained_shattered_glass", AtbywUtils.dyeColorNames(), WHITE_STAINED_SHATTERED_GLASS, ORANGE_STAINED_SHATTERED_GLASS, MAGENTA_STAINED_SHATTERED_GLASS, LIGHT_BLUE_STAINED_SHATTERED_GLASS, YELLOW_STAINED_SHATTERED_GLASS, LIME_STAINED_SHATTERED_GLASS, PINK_STAINED_SHATTERED_GLASS, GRAY_STAINED_SHATTERED_GLASS, LIGHT_GRAY_STAINED_SHATTERED_GLASS, CYAN_STAINED_SHATTERED_GLASS, PURPLE_STAINED_SHATTERED_GLASS, BLUE_STAINED_SHATTERED_GLASS, BROWN_STAINED_SHATTERED_GLASS, GREEN_STAINED_SHATTERED_GLASS, RED_STAINED_SHATTERED_GLASS, BLACK_STAINED_SHATTERED_GLASS);
        registerBlock(false, BLOCKS_TAB, "basalt_bricks", BASALT_BRICKS);
        registerBlock(false, BLOCKS_TAB, "basalt_pillar", BASALT_PILLAR);
        registerBlock( false, BLOCKS_TAB, "terracotta_stairs", TERRACOTTA_STAIRS);
        registerBlocks(false, BLOCKS_TAB, "terracotta_stairs", AtbywUtils.dyeColorNames(), WHITE_TERRACOTTA_STAIRS, ORANGE_TERRACOTTA_STAIRS, MAGENTA_TERRACOTTA_STAIRS, LIGHT_BLUE_TERRACOTTA_STAIRS, YELLOW_TERRACOTTA_STAIRS, LIME_TERRACOTTA_STAIRS, PINK_TERRACOTTA_STAIRS, GRAY_TERRACOTTA_STAIRS, LIGHT_GRAY_TERRACOTTA_STAIRS, CYAN_TERRACOTTA_STAIRS, PURPLE_TERRACOTTA_STAIRS, BLUE_TERRACOTTA_STAIRS, BROWN_TERRACOTTA_STAIRS, GREEN_TERRACOTTA_STAIRS, RED_TERRACOTTA_STAIRS, BLACK_TERRACOTTA_STAIRS);
        registerBlock( false, BLOCKS_TAB, "terracotta_slab", TERRACOTTA_SLAB);
        registerBlocks(false, BLOCKS_TAB, "terracotta_slab", AtbywUtils.dyeColorNames(), WHITE_TERRACOTTA_SLAB, ORANGE_TERRACOTTA_SLAB, MAGENTA_TERRACOTTA_SLAB, LIGHT_BLUE_TERRACOTTA_SLAB, YELLOW_TERRACOTTA_SLAB, LIME_TERRACOTTA_SLAB, PINK_TERRACOTTA_SLAB, GRAY_TERRACOTTA_SLAB, LIGHT_GRAY_TERRACOTTA_SLAB, CYAN_TERRACOTTA_SLAB, PURPLE_TERRACOTTA_SLAB, BLUE_TERRACOTTA_SLAB, BROWN_TERRACOTTA_SLAB, GREEN_TERRACOTTA_SLAB, RED_TERRACOTTA_SLAB, BLACK_TERRACOTTA_SLAB);
        registerBlock( false, BLOCKS_TAB, "terracotta_bricks", TERRACOTTA_BRICKS);
        registerBlocks(false, BLOCKS_TAB, "terracotta_bricks", AtbywUtils.dyeColorNames(), WHITE_TERRACOTTA_BRICKS, ORANGE_TERRACOTTA_BRICKS, MAGENTA_TERRACOTTA_BRICKS, LIGHT_BLUE_TERRACOTTA_BRICKS, YELLOW_TERRACOTTA_BRICKS, LIME_TERRACOTTA_BRICKS, PINK_TERRACOTTA_BRICKS, GRAY_TERRACOTTA_BRICKS, LIGHT_GRAY_TERRACOTTA_BRICKS, CYAN_TERRACOTTA_BRICKS, PURPLE_TERRACOTTA_BRICKS, BLUE_TERRACOTTA_BRICKS, BROWN_TERRACOTTA_BRICKS, GREEN_TERRACOTTA_BRICKS, RED_TERRACOTTA_BRICKS, BLACK_TERRACOTTA_BRICKS);
        registerBlock( false, BLOCKS_TAB, "terracotta_bricks_stairs", TERRACOTTA_BRICKS_STAIRS);
        registerBlocks(false, BLOCKS_TAB, "terracotta_bricks_stairs", AtbywUtils.dyeColorNames(), WHITE_TERRACOTTA_BRICKS_STAIRS, ORANGE_TERRACOTTA_BRICKS_STAIRS, MAGENTA_TERRACOTTA_BRICKS_STAIRS, LIGHT_BLUE_TERRACOTTA_BRICKS_STAIRS, YELLOW_TERRACOTTA_BRICKS_STAIRS, LIME_TERRACOTTA_BRICKS_STAIRS, PINK_TERRACOTTA_BRICKS_STAIRS, GRAY_TERRACOTTA_BRICKS_STAIRS, LIGHT_GRAY_TERRACOTTA_BRICKS_STAIRS, CYAN_TERRACOTTA_BRICKS_STAIRS, PURPLE_TERRACOTTA_BRICKS_STAIRS, BLUE_TERRACOTTA_BRICKS_STAIRS, BROWN_TERRACOTTA_BRICKS_STAIRS, GREEN_TERRACOTTA_BRICKS_STAIRS, RED_TERRACOTTA_BRICKS_STAIRS, BLACK_TERRACOTTA_BRICKS_STAIRS);
        registerBlock( false, BLOCKS_TAB, "terracotta_bricks_slab", TERRACOTTA_BRICKS_SLAB);
        registerBlocks(false, BLOCKS_TAB, "terracotta_bricks_slab", AtbywUtils.dyeColorNames(), WHITE_TERRACOTTA_BRICKS_SLAB, ORANGE_TERRACOTTA_BRICKS_SLAB, MAGENTA_TERRACOTTA_BRICKS_SLAB, LIGHT_BLUE_TERRACOTTA_BRICKS_SLAB, YELLOW_TERRACOTTA_BRICKS_SLAB, LIME_TERRACOTTA_BRICKS_SLAB, PINK_TERRACOTTA_BRICKS_SLAB, GRAY_TERRACOTTA_BRICKS_SLAB, LIGHT_GRAY_TERRACOTTA_BRICKS_SLAB, CYAN_TERRACOTTA_BRICKS_SLAB, PURPLE_TERRACOTTA_BRICKS_SLAB, BLUE_TERRACOTTA_BRICKS_SLAB, BROWN_TERRACOTTA_BRICKS_SLAB, GREEN_TERRACOTTA_BRICKS_SLAB, RED_TERRACOTTA_BRICKS_SLAB, BLACK_TERRACOTTA_BRICKS_SLAB);
        registerBlocks(false, BLOCKS_TAB, "concrete_stairs", AtbywUtils.dyeColorNames(), WHITE_CONCRETE_STAIRS, ORANGE_CONCRETE_STAIRS, MAGENTA_CONCRETE_STAIRS, LIGHT_BLUE_CONCRETE_STAIRS, YELLOW_CONCRETE_STAIRS, LIME_CONCRETE_STAIRS, PINK_CONCRETE_STAIRS, GRAY_CONCRETE_STAIRS, LIGHT_GRAY_CONCRETE_STAIRS, CYAN_CONCRETE_STAIRS, PURPLE_CONCRETE_STAIRS, BLUE_CONCRETE_STAIRS, BROWN_CONCRETE_STAIRS, GREEN_CONCRETE_STAIRS, RED_CONCRETE_STAIRS, BLACK_CONCRETE_STAIRS);
        registerBlocks(false, BLOCKS_TAB, "concrete_slab", AtbywUtils.dyeColorNames(), WHITE_CONCRETE_SLAB, ORANGE_CONCRETE_SLAB, MAGENTA_CONCRETE_SLAB, LIGHT_BLUE_CONCRETE_SLAB, YELLOW_CONCRETE_SLAB, LIME_CONCRETE_SLAB, PINK_CONCRETE_SLAB, GRAY_CONCRETE_SLAB, LIGHT_GRAY_CONCRETE_SLAB, CYAN_CONCRETE_SLAB, PURPLE_CONCRETE_SLAB, BLUE_CONCRETE_SLAB, BROWN_CONCRETE_SLAB, GREEN_CONCRETE_SLAB, RED_CONCRETE_SLAB, BLACK_CONCRETE_SLAB);
        registerBlocks(false, BLOCKS_TAB, "cinder_bricks", AtbywUtils.dyeColorNames(), WHITE_CINDER_BLOCKS, ORANGE_CINDER_BLOCKS, MAGENTA_CINDER_BLOCKS, LIGHT_BLUE_CINDER_BLOCKS, YELLOW_CINDER_BLOCKS, LIME_CINDER_BLOCKS, PINK_CINDER_BLOCKS, GRAY_CINDER_BLOCKS, LIGHT_GRAY_CINDER_BLOCKS, CYAN_CINDER_BLOCKS, PURPLE_CINDER_BLOCKS, BLUE_CINDER_BLOCKS, BROWN_CINDER_BLOCKS, GREEN_CINDER_BLOCKS, RED_CINDER_BLOCKS, BLACK_CINDER_BLOCKS);

    }
}
